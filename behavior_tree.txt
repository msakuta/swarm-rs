tree main = Sequence {
    if (!HasTarget) {
        FindEnemy
    }
    Fallback {
        Sequence {
            IsTargetVisible (target <- target)
            FaceToTarget (target <- target)
            Shoot
        }
        FollowPathAndAvoid
    }
}

tree FollowPathAndAvoid = Sequence {
    if (!HasPath) {
        TargetPos (pos -> target)
        FindPath (target <- target)
    }
    if (HasPath) {
        if (!FollowPath) {
            ReactiveSequence {
                Drive (direction <- "backward")
                Randomize (max <- "20", value -> timeoutValue)
                Timeout (time <- timeoutValue)
            }
            if (PathNextNode (output -> pathNext)) {
                Randomize (min <- "20", max <- "100", value -> timeoutValue)
                ReactiveFallback {
                    Avoidance (goal <- pathNext)
                    ForceFailure {
                        Timeout (time <- timeoutValue)
                    }
                    ClearAvoidance
                }
            }
        }
        Shoot
    }
}
